# Eclipse Git관련 View

Window -> Show View -> Othe.. -> Git -> Git Repositorise


# Git

- .git 폴더가 위치한 폴더의 모든 내용을 관리해주는 프로그램
- .git 폴더가 위치한 폴더를 Repository라고 부른다
- .git 폴더 내부에는 해당 폴더의 현재 상태가 모두 기록되어 있다
- .git 폴더를 이용하여 언제든지 이전의 상태로 돌아갈 수 있다 (Windows의 복구 기능과 비슷)
- 해당 폴더 내부의 무엇인가가 조금이라도 변하면 알아채고 관리한다
- Eclipse에는 Git이 내장되어 있다



# Github

- Repository는 내 컴퓨터에 저장해놓고 사용할 수도 있고
  원격지에 존재하는 컴퓨터에 저장해놓고 필요할때마다 내 컴퓨터로 복사하여 사용할 수도 있다
- 전자를 로컬 Repository 라고 하고, 후자를 원겨 Repository 라고 한다
- Github는 원격 Repository를 업로드 해놓을 수 있는 사이트다



# Github에서 Repository 생성 후 

1. Gihub에서 새로운 Repository 생성핼줄것 같은 버튼 누르기
2. 레포지토리 이름 정하기
3. Readme.md .gitignore 추가하기 (.gitignore는 사용하는 언어의 템플릿 고르기)
4. 라이센스 고르기 (내가 만든 이 코드를 가져다 사용할 때 돈을 내야하는지 여부)
5. 생성
6. Eclipse에서 clone으로 가져오기


# Repository에 Eclipse 프로젝트 관리 대상으로 등록하기

	1. 새 프로젝트 생성
	2. 생성한 프로젝트 우클릭 -> 우클릭 -> Team -> Share Project-> 원하는 Repo 선택


# commit
	- 레포지토리 내의 변경 사항을 저장하는 명령어
	- Git은 언제든지 레포지토리 내의 상태를 commit 했었을 때의 시점으로 돌릴 수 있다
 	  (스냅샷을 찍는다)
 	- checkout을 통해 원하는 commit으로 head를 계속 옮겨다닐 수 있다
 	  (HEAD는 현재 git이 보여주고 있는 상태를 말한다)

# .gitignore

	- .gitignore 파일 내부에 등록된 패턴과 일치하는 파일들은 git의 관리 대상에서 제외된다
	- Eclipse 프로젝트를 사용할 때는 Eclipse 관련 설정 파일들을 등록해두는 것이 좋다
		.settings/  (<<폴더라서 슬래쉬 붙음)
		*.project
		*.classpath

# unstaged와 staged의 차이

	- 가장 최신 커밋 이후로 변화가 있었던 파일들은 모두 (.gitignore에 등록된 것들은 제외)
	unstaged 상태가 된다
	- 모든 변화들 중 이번 커밋에서 확정짓고 싶은 변화들만 staged 상태로 올린 후 커밋을 진행한다
	- 즉, unstaged는 변화는 있었지만 아직 더 만들어야 하는 상태인 코드들을 말하는 것이고
	staged에 포함시킨 것은 변화가 있었고, 다 만든 상태인 코드들을 말한다


# 연습해보기 : 여태 공부했던 JavaStudy의 모든 내용을 Github에 올리고 깃 주소를 보내주세요


